{"version":3,"sources":["store/reducers/activityReducer.js","store/reducers/index.js","store/actions/activityActions.js","store/configureStore.js","components/FavoritesBtn.js","components/ItemsListActivity.js","components/FilterPrice.js","components/FilterCategoryActivity.js","components/FilterBar.js","pages/Main.js","components/FullInfoActivity.js","pages/Favorites.js","App.js","serviceWorker.js","index.js"],"names":["initialState","favoriteActivityIds","checkLocalStorage","allCategories","name","slug","activityData","id","title","description","image","body","price","is_free","categories","updateLocalStorage","newArray","sameId","indexOf","splice","push","localStorage","setItem","JSON","stringify","parse","getItem","rootReducer","combineReducers","activity","state","action","type","payload","before","slice","after","store","createStore","applyMiddleware","logger","FavoritesBtn","favoritesIds","useSelector","dispatch","useDispatch","isFavorites","some","i","styles","default","cursor","color","marginLeft","active","className","aria-hidden","style","onClick","removeFromFavorites","addToFavorites","ItemsListActivity","items","map","item","width","key","to","src","alt","substring","FilterPrice","priceStart","priceEnd","handleChange","placeholder","value","onChange","FilterCategoryActivity","selectedСategories","category","checked","htmlFor","FilterBar","setState","searchTerm","e","target","newCata","prev","Main","useState","data","length","filter","next","p","someF","d","Number","FullInfoActivity","itemId","find","height","Favorites","App","path","exact","component","render","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e1365db.chunk.js","sourcesContent":["import {\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES\r\n} from \"../actions/activityActions\"\r\n\r\nconst initialState = {\r\n  favoriteActivityIds: checkLocalStorage(),\r\n  allCategories: [\r\n    { name: \"Праздник\", slug: \"holiday\" },\r\n    { name: \"Фестиваль\", slug: \"festival\" },\r\n    { name: \"Шоу\", slug: \"show\" },\r\n    { name: \"Мюзикл\", slug: \"musical\" },\r\n    { name: \"Выставка\", slug: \"exhibition\" }\r\n  ],\r\n  activityData: [\r\n    {\r\n      id: 1,\r\n      title: \"Фестиваль света\",\r\n      slug: \"razdnik-festival-sveta\",\r\n      description:\r\n        \"Этой зимой, горожан и гостей города приглашает Музей Магии. Музей Магии — это целое волшебное пространство, в котором найдётся много интересного как для детей, так и для взрослых. Большинство экспонатов музея — это интерактивные объекты, в которых вы сможете воспроизвести известные фокусы.   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      image: null,\r\n      body:\r\n        \"4 и 5 ноября в Петербурге пройдёт очередной Фестиваль света. На этот раз действо захватит сразу две площадки — Дворцовую площадь и Петроградскую набережную.\\nНа фасады Зимнего дворца и Главного штаба будут транслировать 3D-представление с использованием технологии видеомэппинга, лазерных и пиротехнических эффектов. На стенах штаба зрители увидят спектакль о ключевых моментах 1917 года, причём здание будет принимать облик то Путиловского завода, то особняка Матильды Кшесинской, то Александринского театра. На Зимнем дворце тем временем появятся картины, воспевающие Петербург. Здесь будет всё, что дорого каждому горожанину: мосты, львы и сфинксы, дворы-колодцы, белые ночи и другие символы Северной столицы.\\nВ этом году на Дворцовой площади впервые пройдёт конкурс мастеров видео-арта..\",\r\n      price: null,\r\n      is_free: true,\r\n      categories: [\"holiday\", \"festival\"]\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Шоу фокусников и бесплатные экскурсии в Музее Магии\",\r\n      slug: \"shou-fokusnikov\",\r\n      description:\r\n        \"Петербург славится своими культурными традициями, и одна из них зарождается прямо на наших глазах — это Фестиваль света. Праздник проходит второй год подряд и привлекает тысячи зрителей. В этот раз темой стал юбилей Октябрьской революции.\",\r\n      image: null,\r\n      body:\r\n        \"Каждый посетитель пройдет по музею в сопровождении экскурсовода и узнает много интересного о мире магии. На территории музея построена сцена — где опытный иллюзионист каждый час показывает шоу для всех посетителей музея. Яркие впечатления гарантированы! Каждый сантиметр Музея Магии открыт для фотографирования — сложно уйти без набора необычных снимков и селфи. Ожившие картины, волшебная шляпа и стул для левитации ждут вас!   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      price: 1500,\r\n      is_free: false,\r\n      categories: [\"show\"]\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Зима в Океанариуме\",\r\n      slug: \"zima\",\r\n      description:\r\n        \"Этой зимой Вас приглашает Океанариум — «подводный музей» с живыми экспонатами — обитателями водной среды. Билеты в конце анонса.\",\r\n      image: null,\r\n      body:\r\n        \"В Океанариуме каждый посетитель может не только погрузиться в атмосферу волшебного окружения подводного мира, но и стать свидетелем ежедневных (кроме понедельника) эксклюзивных шоу с водными обитателями — «Шоу с акулами» и «Шоу с тюленями»   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      price: 5500,\r\n      is_free: false,\r\n      categories: [\"holiday\", \"show\"]\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Мюзикла «Великий Гэтсби»\",\r\n      slug: \"velikij-gtsbi\",\r\n      description:\r\n        \"24 января 2020 года, на сцене Мюзик-Холла, пройдет премьера мюзикла  «Великий Гэтсби». Новое прочтение культового романа Ф. С. Фицджеральда поднимает важнейший круг тем и проблем. Это тема любви и одиночества, проблема настоящих и мнимых ценностей, гибели идеалов и надежд человека в современном мире. Билеты в конце анонса.   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      image: null,\r\n      body:\r\n        \"Популярный роман неоднократно привлекал внимание кинематографистов и театральных режиссеров. Театр «Мюзик-Холл» впервые в России представил историю американской мечты и ее краха в жанре мюзикла. Зрителей ждет феерия музыки и танцев: гремучий микс 1920-ых гг., неподражаемая эпоха ар-деко и безудержного веселья, граничащего с фатальной безрассудностью.   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      price: 10500,\r\n      is_free: false,\r\n      categories: [\"musical\", \"show\"]\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Выставка «Развлечение для попавших в штиль»\",\r\n      slug: \"vystavka\",\r\n      description:\r\n        \"С 15 по 29 января 2020 года, в музее Анны Ахматовой в Фонтанном доме, проходит выставка «Развлечение для попавших в штиль». Выставку работ петербургского художника Игоря Александрова составили произведения последних лет.   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      image: null,\r\n      body:\r\n        \"Чтобы усилить впечатление иллюзорности, театрализованности, автор выбрал стиль афиши. Художник работает в ахроматической гамме: черно-белая палитра позволяет создавать образ скупыми и одновременно изысканности средствами. Игорь Александров родился в 1978 году в Ленинграде. Получил музыкальное образование, в 22 года начал пробовать себя в живописи. Окончив вечерние рисовальные классы при Академии художеств, пошел не проторенной дорогой, а, по словам самого художника, «полез своей тропой в некие дебри, свет сквозь которые не видел, но скорее чувствовал».   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      price: 28000,\r\n      is_free: false,\r\n      categories: [\"exhibition\"]\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Выставка «Мадонна в цветах»\",\r\n      slug: \"vystavka-madonna\",\r\n      description:\r\n        \"С 12 декабря по 23 февраля 2020 г. в Arts Square Gallery проходит выставка «Мадонна в цветах», на которой зрители увидят уникальные полотна фламандских художников XVII века Питера Пауля Рубенса, Яна Брейгеля старшего и Яна Брейгеля младшего, Эразмуса Квеллинуса, Яна Филипса ван Тилена и Корнелиса ван Клеве из частных собраний. Картины представляют собой богато декорированные цветами композиции на сюжеты Нового Завета. Билеты в конце анонса.   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      image: null,\r\n      body:\r\n        \"Голландия, XVII столетие. Страна переживает небывалый расцвет, так называемый «Золотой век». В конце XVI века несколько провинций страны добились независимости от Испании. Теперь протестантские Нидерланды пошли своим путем, а католическая Фландрия (нынешняя Бельгия) под крылом Испании — своим. Семнадцатое столетие фламандской живописи до сих пор поражает нас богатством своих достижений, в том числе исключительным разнообразием картин на религиозные темы. Достоверность деталей и выверенная до мелочей композиция были отличительными признаками живописи этого периода.   Источник — kuda-spb.ru, лучшие события Санкт-Петербурга.\",\r\n      price: null,\r\n      is_free: true,\r\n      categories: [\"exhibition\"]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const activityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITES:\r\n      updateLocalStorage(action.payload)\r\n      return {\r\n        ...state,\r\n        favoriteActivityIds: [...state.favoriteActivityIds, action.payload]\r\n      }\r\n\r\n    case REMOVE_FROM_FAVORITES:\r\n      updateLocalStorage(action.payload)\r\n      let sameId = state.favoriteActivityIds.indexOf(action.payload)\r\n      let before = state.favoriteActivityIds.slice(0, sameId)\r\n      let after = state.favoriteActivityIds.slice(sameId + 1)\r\n      let newArray = [...before, ...after]\r\n      return {\r\n        ...state,\r\n        favoriteActivityIds: newArray\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction updateLocalStorage(id) {\r\n  let newArray = checkLocalStorage()\r\n  let sameId = newArray.indexOf(id)\r\n\r\n  if (sameId >= 0) {\r\n    newArray.splice(sameId, 1)\r\n  } else {\r\n    newArray.push(id)\r\n  }\r\n\r\n  localStorage.setItem(\"favoritesActivityIds\", JSON.stringify(newArray))\r\n}\r\n\r\nfunction checkLocalStorage() {\r\n  if (!localStorage[\"favoritesActivityIds\"]) {\r\n    return []\r\n  }\r\n  return JSON.parse(localStorage.getItem(\"favoritesActivityIds\"))\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { activityReducer } from \"./activityReducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  activity: activityReducer\r\n})\r\n","export const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\"\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\"\r\n\r\nexport const addToFavorites = id => {\r\n  return {\r\n    type: ADD_TO_FAVORITES,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const removeFromFavorites = id => {\r\n  return {\r\n    type: REMOVE_FROM_FAVORITES,\r\n    payload: id\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\"\r\nimport { rootReducer } from \"./reducers\"\r\nimport logger from \"redux-logger\"\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger))\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  addToFavorites,\r\n  removeFromFavorites\r\n} from \"../store/actions/activityActions\"\r\n\r\nexport const FavoritesBtn = ({ id }) => {\r\n  const favoritesIds = useSelector(state => state.activity.favoriteActivityIds)\r\n  const dispatch = useDispatch()\r\n\r\n  const checkOnFavorites = () => {\r\n    return favoritesIds.some(i => i === id)\r\n  }\r\n  let isFavorites = checkOnFavorites()\r\n\r\n  const styles = {\r\n    default: {\r\n      cursor: \"ponter\",\r\n      color: isFavorites ? \"red\" : \"initial\",\r\n      marginLeft: 5\r\n    },\r\n    active: {\r\n      color: \"red\"\r\n    }\r\n  }\r\n\r\n  const handlerFavorites = () => {\r\n    isFavorites\r\n      ? dispatch(removeFromFavorites(id))\r\n      : dispatch(addToFavorites(id))\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className=\"fa fa-heart\"\r\n      aria-hidden=\"true\"\r\n      style={styles.default}\r\n      onClick={handlerFavorites}\r\n    ></i>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { FavoritesBtn } from \"./FavoritesBtn\"\r\n\r\nexport const ItemsListActivity = ({ items }) => {\r\n  return (\r\n    <div className=\"rounded d-flex justify-content-start flex-wrap px-2\">\r\n      {items.map(item => {\r\n        return (\r\n          <div className=\"card mb-2\" style={{ width: 380 }} key={item.id}>\r\n            <NavLink to={`/activity/${item.id}`}>\r\n              <img\r\n                className=\"card-img-top\"\r\n                src=\"/img/cardImage.svg\"\r\n                alt={item.slug}\r\n              />\r\n            </NavLink>\r\n\r\n            <div className=\"card-body d-flex flex-column\">\r\n              <h5 className=\"card-title\">\r\n                {item.title}\r\n                <FavoritesBtn id={item.id} />\r\n              </h5>\r\n\r\n              <p className=\"card-text\">\r\n                {item.description.substring(0, 200)}...\r\n              </p>\r\n\r\n              <div className=\"d-flex align-items-end justify-content-between mt-auto\">\r\n                <div>\r\n                  <NavLink to={`/activity/${item.id}`}>\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                      Подробнее\r\n                    </button>\r\n                  </NavLink>\r\n                </div>\r\n\r\n                {item.price && (\r\n                  <span className=\"card-text\">Цена: {item.price}р</span>\r\n                )}\r\n                {item.is_free && (\r\n                  <span className=\"badge badge-success\">Бесплатно</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const FilterPrice = ({ priceStart, priceEnd, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <span>Цена:</span>\r\n      <div className=\"my-2\" style={{ width: \"130px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Цена от \"\r\n          name=\"priceStart\"\r\n          value={priceStart || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Цена до\"\r\n          name=\"priceEnd\"\r\n          value={priceEnd || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const FilterCategoryActivity = ({\r\n  selectedСategories,\r\n  handleChange,\r\n  allCategories\r\n}) => {\r\n  return (\r\n    <div>\r\n      {allCategories.map(category => (\r\n        <div className=\"custom-control custom-checkbox\" key={category.slug}>\r\n          <input\r\n            className=\"custom-control-input\"\r\n            type=\"checkbox\"\r\n            id={category.slug}\r\n            value={category.slug}\r\n            onChange={handleChange}\r\n            checked={selectedСategories.some(i => i === category.slug)}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor={category.slug}>\r\n            {category.name}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nimport { FilterPrice } from \"./FilterPrice\"\r\nimport { FilterCategoryActivity } from \"./FilterCategoryActivity\"\r\n\r\nexport const FilterBar = ({ state, setState, searchTerm }) => {\r\n  const handleChange = e => {\r\n    let name = e.target.name || \"selectedСategories\"\r\n    let value = e.target.value || e.target.htmlFor\r\n    if (name === \"selectedСategories\") {\r\n      let newCata = [...state.selectedСategories]\r\n      if (newCata.indexOf(value) >= 0) {\r\n        newCata.splice(newCata.indexOf(value), 1)\r\n      } else {\r\n        newCata.push(value)\r\n      }\r\n      return setState(prev => ({ ...prev, [name]: newCata }))\r\n    }\r\n    setState(prev => ({ ...prev, [name]: value }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <FilterPrice\r\n        priceStart={state.priceStart}\r\n        priceEnd={state.priceEnd}\r\n        state={state}\r\n        handleChange={handleChange}\r\n      />\r\n      <FilterCategoryActivity\r\n        selectedСategories={state.selectedСategories}\r\n        allCategories={state.allCategories}\r\n        handleChange={handleChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { ItemsListActivity } from \"../components/ItemsListActivity\"\r\nimport { FilterBar } from \"../components/FilterBar\"\r\n\r\nexport const Main = () => {\r\n  const [state, setState] = useState({\r\n    data: useSelector(state => state.activity.activityData),\r\n    allCategories: useSelector(state => state.activity.allCategories),\r\n    selectedСategories: [],\r\n    priceStart: \"\",\r\n    priceEnd: \"\"\r\n  })\r\n\r\n  let data = [...state.data]\r\n\r\n  if (state.selectedСategories.length) {\r\n    data = data.filter(item =>\r\n      findMatch(item.categories, state.selectedСategories)\r\n    )\r\n  }\r\n  if (state.priceStart) {\r\n    data = data.filter(d => Number(d.price) >= Number(state.priceStart))\r\n  }\r\n  if (state.priceEnd) {\r\n    data = data.filter(d => Number(d.price) <= Number(state.priceEnd))\r\n  }\r\n  function findMatch(prev, next) {\r\n    const someF = i => next.some(p => p === i)\r\n    let isMatch = prev.some(i => someF(i))\r\n    return isMatch\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <FilterBar state={state} setState={setState} data={data} />\r\n      <ItemsListActivity items={data} />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { FavoritesBtn } from \"./FavoritesBtn\"\r\n\r\nexport const FullInfoActivity = ({ itemId }) => {\r\n  const item = useSelector(state =>\r\n    state.activity.activityData.find(i => i.id === itemId)\r\n  )\r\n\r\n  if (!item) {\r\n    return <div>Нету такого мероприятия!</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <h2 className=\"text-left\">\r\n          {item.title}\r\n          <FavoritesBtn id={item.id} />\r\n        </h2>\r\n        <div className=\"card\">\r\n          <img\r\n            style={{ height: \"400px\" }}\r\n            className=\"card-img-top\"\r\n            src=\"/img/cardImage.svg\"\r\n            alt={item.slug}\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{item.description}</h5>\r\n            <p className=\"card-text\">{item.body}</p>\r\n            <p className=\"card-text\">\r\n              {item.price && (\r\n                <span className=\"card-text\">Цена: {item.price}р</span>\r\n              )}\r\n              {item.is_free && (\r\n                <span className=\"badge badge-success\">Бесплатно</span>\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { ItemsListActivity } from \"../components/ItemsListActivity\"\r\n\r\nexport const Favorites = () => {\r\n  const favoritesIds = useSelector(state => state.activity.favoriteActivityIds)\r\n  const findMatchId = id => {\r\n    return favoritesIds.find(i => i === id)\r\n  }\r\n  const activityData = useSelector(state =>\r\n    state.activity.activityData.filter(item => findMatchId(item.id))\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activityData.length ? (\r\n        <ItemsListActivity items={activityData} />\r\n      ) : (\r\n        <h2 className=\"text-center\">У вас нет избранных мероприятий :(</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport { BrowserRouter, Switch, Route, NavLink } from \"react-router-dom\"\n\nimport { Main } from \"./pages/Main\"\nimport { FullInfoActivity } from \"./components/FullInfoActivity\"\nimport { Favorites } from \"./pages/Favorites\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"col-lg-9 mx-auto\">\n        <div className=\"d-flex justify-content-between\">\n          <NavLink to=\"/\">\n            <h2>Главная</h2>\n          </NavLink>\n          <NavLink to=\"/favorites\">\n            <h2>Избранное</h2>\n          </NavLink>\n        </div>\n\n        <Switch>\n          <Route path=\"/\" exact component={Main} /> />\n          <Route\n            path=\"/activity/:id\"\n            render={({ match }) => {\n              const { id } = match.params\n              return <FullInfoActivity itemId={Number(id)} />\n            }}\n          />\n          <Route path=\"/favorites\" exact component={Favorites} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./store/configureStore\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}